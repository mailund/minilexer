% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TokenStream.R
\docType{data}
\name{TokenStream}
\alias{TokenStream}
\title{An R6 class for manipulating/interrogating a stream of tokens.}
\format{\code{\link{R6Class}} object.}
\usage{
TokenStream
}
\description{
An R6 class for manipulating/interrogating a stream of tokens.
}
\section{Usage}{

\preformatted{stream = TokenStream$new(tokens)

stream$current_value()

}
}

\section{Arguments}{

\code{tokens} The named character vector of tokens output by \code{lex()}.
}

\section{Methods}{

\code{$new()} Initialize a token stream with a vector of tokens.


\code{$get_token_value(offset = 0)} Get the value of the token at the given
     offset from the current position.

\code{$get_token_type(offset = 0)} Get the type of the token at the given
     offset from the current position.


\code{$current_value()} Get the value of the token at the current position.

\code{$current_type()} Get the type of the token at the current position.


\code{$expect_value(value)} Check that the token at the current position has the
      specified value. Silently return TRUE if it does, otherwise throw
      an error. Value may be scalar or vector.

\code{$expect_type(type)} Check that the token at the current position has the
      specified type. Silently return TRUE if it does, otherwise throw
      an error. Type may be scalar or vector.


\code{$consume_token{type=NULL, value=NULL}} Return the token at the current
     position and advance the stream to the next token. If \code{value} or
     \code{type} are specified, then \code{expect_value()} or \code{expect_type()}
     are called to verify the token before returning.  Type and value may be scalar or vector.

\code{$consume_tokens_of_type{type, n=Inf}} Consume 'n' tokens of the given type.
     Consumption stops when 'n' is reached, or tokens are no longer of the
     specified type - whichever comes first. n' may be a vector of values e.g. c(3, 4) and tokens will be
     consumed until the maximum value is reached. The length of the returned
     values is checked to be one of the specified 'n'.  n' defaults to 'Inf'.
     Returns a vector of values of the consumed tokens. Type may be scale or vector.
}

\keyword{datasets}
